import os
import discord
from discord.ext import commands
from discord import app_commands
from dotenv import load_dotenv  # ‚Üê ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ

from myserver import server_on
import random

load_dotenv()  # ‚Üê ‡πÇ‡∏´‡∏•‡∏î .env ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ

intents = discord.Intents.all()
bot = commands.Bot(command_prefix='/', intents=intents)

# (‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà)


 # ‡∏´‡πâ‡∏≤‡∏°‡πÇ‡∏ä‡∏ß‡πå token ‡∏à‡∏£‡∏¥‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö!

user_tickets = {}

def get_balance(user_id):
    return user_tickets.get(user_id, 100)

def update_balance(user_id, amount):
    user_tickets[user_id] = get_balance(user_id) + amount

@bot.event
async def on_ready():
    print(f"‚úÖ Bot Online as {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"üì° Synced {len(synced)} command(s) with Discord")
    except Exception as e:
        print(f"‚ùå Failed to sync commands: {e}")

# ‡πÉ‡∏ä‡πâ app_commands ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Slash Command ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
@bot.tree.command(name="‡∏ï‡∏Å‡∏õ‡∏•‡∏≤", description="‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏Å‡∏õ‡∏•‡∏≤")
@app_commands.describe(bait="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏Å‡∏õ‡∏•‡∏≤")
@app_commands.choices(bait=[
    app_commands.Choice(name="‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠", value="‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠"),
    app_commands.Choice(name="‡πÑ‡∏™‡πâ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", value="‡πÑ‡∏™‡πâ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"),
    app_commands.Choice(name="‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏™‡∏π‡∏ï‡∏£‡∏û‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå", value="‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏™‡∏π‡∏ï‡∏£‡∏û‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå"),
    app_commands.Choice(name="‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏õ‡∏•‡∏≠‡∏°", value="‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏õ‡∏•‡∏≠‡∏°"),
 
])
async def fish(interaction: discord.Interaction, bait: app_commands.Choice[str]):
    bait_value = bait.value

    if bait_value == "‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠":
        fish_types = ["‡∏õ‡∏•‡∏≤‡πÄ‡∏Ç‡πá‡∏á", "‡∏õ‡∏•‡∏≤‡∏ï‡∏∞‡πÄ‡∏û‡∏µ‡∏¢‡∏ô"]
        weights = [0.5, 0.5]
    elif bait_value == "‡πÑ‡∏™‡πâ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô":
        fish_types = ["‡∏õ‡∏•‡∏≤‡πÄ‡∏Ç‡πá‡∏á", "‡∏õ‡∏•‡∏≤‡∏ï‡∏∞‡πÄ‡∏û‡∏µ‡∏¢‡∏ô", "‡∏õ‡∏•‡∏≤‡∏ô‡∏¥‡∏•", "‡∏õ‡∏•‡∏≤‡∏î‡∏∏‡∏Å"]
        weights = [0.1, 0.1, 0.4, 0.4]
    elif bait_value == "‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏™‡∏π‡∏ï‡∏£‡∏û‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå":
        fish_types = ["‡∏õ‡∏•‡∏≤‡∏ô‡∏¥‡∏•", "‡∏õ‡∏•‡∏≤‡∏î‡∏∏‡∏Å", "‡∏õ‡∏•‡∏≤‡∏ä‡πà‡∏≠‡∏ô"]
        weights = [0.1, 0.1, 0.8]
    elif bait_value == "‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏õ‡∏•‡∏≠‡∏°":
        fish_types = ["‡∏õ‡∏•‡∏≤‡πÄ‡∏Ç‡πá‡∏á", "‡∏õ‡∏•‡∏≤‡∏ï‡∏∞‡πÄ‡∏û‡∏µ‡∏¢‡∏ô", "‡∏õ‡∏•‡∏≤‡∏ô‡∏¥‡∏• ", "‡∏õ‡∏•‡∏≤‡∏î‡∏∏‡∏Å", "‡∏õ‡∏•‡∏≤‡∏ä‡πà‡∏≠‡∏ô"]
        weights = [0.3, 0.3, 0.1, 0.1, 0.2]
     
   

    caught_fish = random.choices(fish_types, weights=weights, k=1)[0]
    await interaction.response.send_message(
        f"üé£ ‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠ **{bait_value}** ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ **{caught_fish}** üêü! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢!"
    )

@bot.tree.command(name="‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤", description="‡∏ó‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ï‡πã‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å")
@app_commands.describe(bet="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô", guess="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ó‡∏≤‡∏¢ (1-6)")
async def dice_game(interaction: discord.Interaction, bet: int, guess: int):
    user_id = interaction.user.id
    balance = get_balance(user_id)

    if bet <= 4:
        await interaction.response.send_message("‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 4")
        return

    if guess not in range(1, 7):
        await interaction.response.send_message("üé≤ ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1 ‡∏ñ‡∏∂‡∏á 6 ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
        return

    if bet > balance:
        await interaction.response.send_message("üí∏ ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô (‡∏ñ‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÇ‡∏ä‡∏ß‡πå‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏∞!)")
        return

    dice = random.randint(1, 6)
    if guess == dice:
        win_amount = bet * 3
        update_balance(user_id, win_amount)
        await interaction.response.send_message(
            f"üéâ ‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏≠‡∏≠‡∏Å **{dice}** ‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å! ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô +{win_amount} ‡∏û‡∏•‡∏±‡∏ô "
        )
    else:
        update_balance(user_id, -bet)
        await interaction.response.send_message(
            f"üò¢ ‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏≠‡∏≠‡∏Å **{dice}** ‡∏ó‡∏≤‡∏¢‡∏ú‡∏¥‡∏î! ‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏á‡∏¥‡∏ô -{bet} ‡∏û‡∏•‡∏±‡∏ô"
        )

@bot.tree.command(name="‡πÄ‡∏õ‡πà‡∏≤‡∏¢‡∏¥‡∏á‡∏â‡∏∏‡∏ö", description="‡πÅ‡∏Ç‡πà‡∏á‡πÄ‡∏õ‡πà‡∏≤‡∏¢‡∏¥‡∏á‡∏â‡∏∏‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡πå")
@app_commands.describe(bet="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô", choice="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Ñ‡πâ‡∏≠‡∏ô ‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©")
@app_commands.choices(choice=[
    app_commands.Choice(name="ü™® ‡∏Ñ‡πâ‡∏≠‡∏ô", value="‡∏Ñ‡πâ‡∏≠‡∏ô"),
    app_commands.Choice(name="‚úÇÔ∏è ‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£", value="‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£"),
    app_commands.Choice(name="üìÑ ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©", value="‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©")
])
async def rps_game(interaction: discord.Interaction, bet: int, choice: app_commands.Choice[str]):
    user_id = interaction.user.id
    player_choice = choice.value
    bot_choice = random.choice(["‡∏Ñ‡πâ‡∏≠‡∏ô", "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£", "‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©"])
    balance = get_balance(user_id)

    if bet <= 4:
        await interaction.response.send_message("‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 4")
        return

    if bet > balance:
        await interaction.response.send_message("üí∏ ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ï‡∏±‡πã‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô")
        return

    result = None
    if player_choice == bot_choice:
        result = "draw"
    elif (
        (player_choice == "‡∏Ñ‡πâ‡∏≠‡∏ô" and bot_choice == "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£") or
        (player_choice == "‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£" and bot_choice == "‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©") or
        (player_choice == "‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©" and bot_choice == "‡∏Ñ‡πâ‡∏≠‡∏ô")
    ):
        result = "win"
    else:
        result = "lose"

    if result == "win":
        update_balance(user_id, bet)
        message = f" ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å **{player_choice}** | ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å **{bot_choice}**\n‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞! ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô +{bet} ‡∏û‡∏•‡∏±‡∏ô"
    elif result == "lose":
        update_balance(user_id, -bet)
        message = f" ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å **{player_choice}** | ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å **{bot_choice}**\n‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ! ‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏á‡∏¥‡∏ô -{bet} ‡∏û‡∏•‡∏±‡∏ô"
    else:
        message = f" ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å **{player_choice}** | ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å **{bot_choice}**\nüîÅ ‡πÄ‡∏™‡∏°‡∏≠! ‡πÑ‡∏î‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô"

    await interaction.response.send_message(message)

server_on()

print("Token Loaded:", os.getenv('TOKEN'))

bot.run(os.getenv('TOKEN'))
